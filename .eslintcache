[{"C:\\Users\\Thao\\Desktop\\mangame\\src\\index.js":"1","C:\\Users\\Thao\\Desktop\\mangame\\src\\App.js":"2","C:\\Users\\Thao\\Desktop\\mangame\\src\\reportWebVitals.js":"3","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\NavBar.js":"4","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\Home.js":"5","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopManga\\TopManga.js":"6","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopManga\\TopMangaCard.js":"7","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopAnime\\TopAnime.js":"8","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopAnime\\TopAnimeCard.js":"9","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopManga\\MangaReview.js":"10"},{"size":471,"mtime":1609198666874,"results":"11","hashOfConfig":"12"},{"size":1207,"mtime":1609806735727,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":2079,"mtime":1609456934440,"results":"15","hashOfConfig":"12"},{"size":3368,"mtime":1609473104459,"results":"16","hashOfConfig":"12"},{"size":2668,"mtime":1609818817109,"results":"17","hashOfConfig":"12"},{"size":3244,"mtime":1609822046843,"results":"18","hashOfConfig":"12"},{"size":2683,"mtime":1609806655291,"results":"19","hashOfConfig":"12"},{"size":2793,"mtime":1609806843432,"results":"20","hashOfConfig":"12"},{"size":1718,"mtime":1609822837529,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"18cjodt",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Thao\\Desktop\\mangame\\src\\index.js",[],["46","47"],"C:\\Users\\Thao\\Desktop\\mangame\\src\\App.js",["48"],"import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\r\nimport Route from 'react-router-dom/Route';\r\nimport NavBar from './components/NavBar'\r\nimport Home from './components/Home'\r\nimport TopAnime from './components/TopAnime/TopAnime';\r\nimport TopManga from './components/TopManga/TopManga';\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n\r\n      <Switch>  \r\n        <Route path = \"/\" exact render = {\r\n          () => {\r\n            return (<Home />);\r\n          }\r\n        }/>\r\n\r\n        <Route path = \"/anime\" exact render = {\r\n          () => {\r\n            return (<TopAnime />);\r\n          }\r\n        }/>\r\n\r\n        <Route path = \"/manga\" exact render = {\r\n          () => {\r\n            return (<TopManga />)\r\n          }\r\n        }/>\r\n\r\n        <Route path = \"/anime-rec\" exact render = {\r\n          () => {\r\n            return (<h1>Anime Recommendations</h1>);\r\n          }\r\n        }/>\r\n\r\n        <Route path = \"/manga-rec\" exact render = {\r\n          () => {\r\n            return (<h1>Manga Recommendations</h1>);\r\n          }\r\n        }/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Thao\\Desktop\\mangame\\src\\reportWebVitals.js",[],"C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\NavBar.js",[],"C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\Home.js",[],"C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopManga\\TopManga.js",["49"],"C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopManga\\TopMangaCard.js",["50"],"C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopAnime\\TopAnime.js",["51"],"import React, { Component } from 'react';\r\nimport TopAnimeCard from './TopAnimeCard';\r\nimport '../TopAnime.css'\r\n\r\nclass TopAnime extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            topAnime: [],\r\n            isLoaded: false,\r\n            anime: {\r\n                end_date: \"\",\r\n                episodes: 0,\r\n                image_url: \"\",\r\n                mal_id: 0,\r\n                rank: 0,\r\n                score: 0.0,\r\n                start_date: \"\",\r\n                title: \"\"\r\n            },\r\n            cardClicked: false\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.toggle = this.toggle.bind(this)\r\n    }\r\n\r\n    handleClick(anime) {\r\n        this.setState({\r\n            anime: anime,\r\n            cardClicked: true\r\n        })\r\n\r\n        console.log(anime)\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            cardClicked: false\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://api.jikan.moe/v3/top/anime/')\r\n            .then(result => result.json())\r\n            .then((json) => {\r\n                this.setState({\r\n                    topAnime: json.top,\r\n                    isLoaded: true\r\n                })\r\n\r\n                console.log(this.state.topAnime)\r\n            });\r\n    }\r\n\r\n    render() { \r\n        const isLoaded = this.state.isLoaded;\r\n        const topAnime = this.state.topAnime;\r\n\r\n        if (!isLoaded) {\r\n            return <h1 className = \"loading\">Loading...</h1>\r\n        }\r\n\r\n        return ( \r\n            <div className = \"container-fluid\">\r\n                <h1 className = \"row heading\">Top Anime</h1>    \r\n\r\n                <div className = \"top-anime-div\">\r\n                    {this.state.cardClicked ? <TopAnimeCard \r\n                                                anime = {this.state.anime}\r\n                                                toggle = {this.toggle}\r\n                                                type = \"anime\"/> : null}\r\n                    <ul className = \"top-anime-list\">\r\n                        {topAnime.map((anime) => \r\n                            <li key = {anime.mal_id} className = \"col-6 col-md-4 col-lg-3 col-xl-2\">\r\n                                <a href = \"#\" onClick = {() => this.handleClick(anime)}>\r\n                                    <img className = \"top-anime\" src = {anime.image_url} alt = {anime.title} />\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TopAnime;","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopAnime\\TopAnimeCard.js",["52","53"],"  import React, { Component } from 'react';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nimport '../Card.css'\r\n\r\nclass TopAnimeCard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLoaded: false,\r\n            currAnime: {\r\n                status: \"\",\r\n                synopsis: \"\",\r\n                premiered: \"\"\r\n            }\r\n        }\r\n\r\n        this.exitClicked = this.exitClicked.bind(this)\r\n    }\r\n    \r\n    exitClicked() {\r\n        this.props.toggle();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = encodeURI(`https://api.jikan.moe/v3/anime/${this.props.anime.mal_id}`)\r\n        console.log(url)\r\n        fetch(url)\r\n        .then(result => result.json())\r\n        .then(json => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                currAnime: {\r\n                    status: json.status,\r\n                    synopsis: json.synopsis,\r\n                    premiered: json.premiered\r\n                }\r\n            })\r\n\r\n            console.log(json)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.isLoaded) {\r\n            return <div className = \"top-anime-card\">\r\n                <h1 className = \"loading\">Loading...</h1>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className = \"top-anime-card\">\r\n                <div className = \"header\">\r\n                    <h1 className = \"title\">\r\n                        {this.props.anime.title}\r\n                    </h1>\r\n                    <Link>\r\n                        <AiOutlineCloseCircle className = \"exit\" onClick = {this.exitClicked}/>\r\n                    </Link>\r\n                </div>\r\n                <div className = \"justify-content-sm-center row\">\r\n                    <img src = {this.props.anime.image_url} className = \"cover col-11 col-sm-9 col-md-4 col-xl-3\"/>\r\n                    <h2 className = \"stats col-12 col-sm-9 col-md-8 col-xl-9\">\r\n                        Ranked: #{this.props.anime.rank}\r\n                        <hr />\r\n                        Score: {this.props.anime.score}\r\n                        <hr />\r\n                        Episodes: {this.props.anime.episodes != {}? this.props.anime.episodes : \"Unknown\"}\r\n                        <hr />\r\n                        Status: {this.state.currAnime.status}\r\n                        <hr />\r\n                        Premiered: {this.state.currAnime.premiered == null? \"Unknown\" : this.state.currAnime.premiered}\r\n                    </h2>\r\n                </div>\r\n                <p className = \"anime-description\">\r\n                    {this.state.currAnime.synopsis}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TopAnimeCard;","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopManga\\MangaReview.js",["54","55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":78,"column":33,"nodeType":"67","endLine":78,"endColumn":89},{"ruleId":"68","severity":1,"message":"69","line":75,"column":21,"nodeType":"67","endLine":75,"endColumn":116},{"ruleId":"65","severity":1,"message":"66","line":77,"column":33,"nodeType":"67","endLine":77,"endColumn":89},{"ruleId":"68","severity":1,"message":"69","line":63,"column":21,"nodeType":"67","endLine":63,"endColumn":116},{"ruleId":"70","severity":1,"message":"71","line":69,"column":62,"nodeType":"72","messageId":"73","endLine":69,"endColumn":64},{"ruleId":"61","severity":1,"message":"74","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},{"ruleId":"68","severity":1,"message":"69","line":28,"column":17,"nodeType":"67","endLine":28,"endColumn":85},{"ruleId":"75","severity":1,"message":"76","line":30,"column":96,"nodeType":"77","endLine":30,"endColumn":113},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]