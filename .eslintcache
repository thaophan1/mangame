[{"C:\\Users\\Thao\\Desktop\\mangame\\src\\index.js":"1","C:\\Users\\Thao\\Desktop\\mangame\\src\\App.js":"2","C:\\Users\\Thao\\Desktop\\mangame\\src\\reportWebVitals.js":"3","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopManga\\TopManga.js":"4","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopManga\\TopMangaCard.js":"5","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopAnime\\TopAnime.js":"6","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopAnime\\TopAnimeCard.js":"7","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\Home\\Home.js":"8","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\NavBar\\NavBar.js":"9","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\Review\\Review.js":"10","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\Footer\\Footer.js":"11"},{"size":471,"mtime":1609198666874,"results":"12","hashOfConfig":"13"},{"size":1290,"mtime":1614549257296,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":5794,"mtime":1611885095694,"results":"16","hashOfConfig":"13"},{"size":3295,"mtime":1614548109893,"results":"17","hashOfConfig":"13"},{"size":5487,"mtime":1610758147120,"results":"18","hashOfConfig":"13"},{"size":3426,"mtime":1614548091440,"results":"19","hashOfConfig":"13"},{"size":3368,"mtime":1614547880576,"results":"20","hashOfConfig":"13"},{"size":2079,"mtime":1614548027130,"results":"21","hashOfConfig":"13"},{"size":1773,"mtime":1614548069895,"results":"22","hashOfConfig":"13"},{"size":2062,"mtime":1616718848924,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"18cjodt",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Thao\\Desktop\\mangame\\src\\index.js",[],["53","54"],"C:\\Users\\Thao\\Desktop\\mangame\\src\\App.js",["55"],"import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\r\nimport Route from 'react-router-dom/Route';\r\nimport NavBar from './components/NavBar/NavBar'\r\nimport Home from './components/Home/Home'\r\nimport TopAnime from './components/TopAnime/TopAnime';\r\nimport TopManga from './components/TopManga/TopManga';\r\nimport Footer from './components/Footer/Footer'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n\r\n      <Switch>  \r\n        <Route path = \"/\" exact render = {\r\n          () => {\r\n            return (<Home />);\r\n          }\r\n        }/>\r\n\r\n        <Route path = \"/anime\" exact render = {\r\n          () => {\r\n            return (<TopAnime />);\r\n          }\r\n        }/>\r\n\r\n        <Route path = \"/manga\" exact render = {\r\n          () => {\r\n            return (<TopManga />)\r\n          }\r\n        }/>\r\n\r\n        <Route path = \"/anime-rec\" exact render = {\r\n          () => {\r\n            return (<h1>Anime Recommendations</h1>);\r\n          }\r\n        }/>\r\n\r\n        <Route path = \"/manga-rec\" exact render = {\r\n          () => {\r\n            return (<h1>Manga Recommendations</h1>);\r\n          }\r\n        }/>\r\n      </Switch>\r\n\r\n      <Footer />\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Thao\\Desktop\\mangame\\src\\reportWebVitals.js",[],"C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopManga\\TopManga.js",["56","57","58","59"],"import React, { Component } from 'react';\r\nimport TopMangaCard from './TopMangaCard';\r\nimport'../TopAnime.css';\r\n\r\n\r\nclass TopManga extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            topManga: [],\r\n            topManhwa: [],\r\n            topNovels: [],\r\n            topOneShots: [],\r\n            isLoaded: false,\r\n            manga: {\r\n                mal_id: 0,\r\n                rank: 0,\r\n                title: \"\",\r\n                volumes: 0,\r\n                start_date: \"\",\r\n                end_date: \"\",\r\n                score: 0,\r\n                image_url: \"\"\r\n            },\r\n            cardClicked: false\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.toggle = this.toggle.bind(this)\r\n    }\r\n\r\n    handleClick(manga) {\r\n        this.setState({\r\n            manga: manga,\r\n            cardClicked: true\r\n        })\r\n\r\n        console.log(manga)\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            cardClicked: false\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://infinite-coast-32217.herokuapp.com/https://api.jikan.moe/v3/top/manga/')\r\n            .then(result => result.json())\r\n            .then((json) => {\r\n                this.setState({\r\n                    topManga: json.top,\r\n                })\r\n\r\n                console.log(`Top Manga: ${this.state.topManga}`)\r\n            });\r\n        \r\n        fetch('https://infinite-coast-32217.herokuapp.com/https://api.jikan.moe/v3/top/manga/1/manhwa')\r\n            .then(result => result.json())\r\n            .then((json) => {\r\n                this.setState({\r\n                    topManhwa: json.top,\r\n                })\r\n\r\n                console.log(`Top Manhwa: ${this.state.topManhwa}`)\r\n            });\r\n\r\n        fetch('https://infinite-coast-32217.herokuapp.com/https://api.jikan.moe/v3/top/manga/1/novels')\r\n            .then(result => result.json())\r\n            .then((json) => {\r\n                this.setState({\r\n                    topNovels: json.top,\r\n                })\r\n\r\n                console.log(`Top Manhua: ${this.state.topNovels}`)\r\n            });\r\n\r\n        fetch('https://infinite-coast-32217.herokuapp.com/https://api.jikan.moe/v3/top/manga/1/oneshots')\r\n            .then(result => result.json())\r\n            .then((json) => {\r\n                this.setState({\r\n                    topOneShots: json.top,\r\n                    isLoaded: true\r\n                })\r\n\r\n                console.log(`Top Doujin: ${this.state.topOneShots}`)\r\n            });\r\n    }\r\n\r\n    render() { \r\n        const isLoaded = this.state.isLoaded;\r\n        const topManga = this.state.topManga;\r\n        const topNovels = this.state.topNovels;\r\n        const topManhwa = this.state.topManhwa;\r\n        const topOneShots = this.state.topOneShots;\r\n\r\n        if (!isLoaded) {\r\n            return <h1 className = \"loading\">Loading...</h1>\r\n        }\r\n\r\n        return ( \r\n            <div className = \"container-fluid\">\r\n\r\n                <div className = \"top-manga-div\">\r\n                    {this.state.cardClicked ? <TopMangaCard \r\n                                                manga = {this.state.manga}\r\n                                                toggle = {this.toggle}\r\n                                                /> : null}\r\n                    \r\n                    <h1 className = \"heading\">Top Manga</h1>    \r\n                    <ul className = \"top-manga-list\">\r\n                        {topManga.map((manga) => \r\n                            <li key = {manga.mal_id} className = \"manga\">\r\n                                <a href = \"#\" onClick = {() => this.handleClick(manga)}>\r\n                                    <img className = \"top-manga\" src = {manga.image_url} alt = {manga.title} />\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n\r\n                    <h1 className = \"heading\">Top Novels</h1>    \r\n                    <ul className = \"top-manga-list\">\r\n                        {topNovels.map((novel) => \r\n                            <li key = {novel.mal_id} className = \"manga\">\r\n                                <a href = \"#\" onClick = {() => this.handleClick(novel)}>\r\n                                    <img className = \"top-manga\" src = {novel.image_url} alt = {novel.title} />\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n\r\n                    <h1 className = \"heading\">Top Manhwa</h1>    \r\n                    <ul className = \"top-manga-list\">\r\n                        {topManhwa.map((manhwa) => \r\n                            <li key = {manhwa.mal_id} className = \"manga\">\r\n                                <a href = \"#\" onClick = {() => this.handleClick(manhwa)}>\r\n                                    <img className = \"top-manga\" src = {manhwa.image_url} alt = {manhwa.title} />\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n\r\n                    <h1 className = \"heading\">Top Oneshots</h1>    \r\n                    <ul className = \"top-manga-list\">\r\n                        {topOneShots.map((oneShot) => \r\n                            <li key = {oneShot.mal_id} className = \"manga\">\r\n                                <a href = \"#\" onClick = {() => this.handleClick(oneShot)}>\r\n                                    <img className = \"top-manga\" src = {oneShot.image_url} alt = {oneShot.title} />\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TopManga;","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopManga\\TopMangaCard.js",["60"],"import React, { Component } from 'react';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nimport Review from '../Review/Review';\r\nimport '../Card.css'\r\n\r\nclass TopMangaCard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLoaded: false,\r\n            currManga: {\r\n                status: \"\",\r\n                synopsis: \"\",\r\n            },\r\n            reviews: []\r\n        }\r\n\r\n        this.exitClicked = this.exitClicked.bind(this)\r\n    }\r\n    \r\n    exitClicked() {\r\n        this.props.toggle();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const mangaURL = encodeURI(`https://api.jikan.moe/v3/manga/${this.props.manga.mal_id}`)\r\n        console.log(mangaURL)\r\n        fetch(mangaURL)\r\n        .then(result => result.json())\r\n        .then(json => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                currManga: {\r\n                    status: json.status,\r\n                    synopsis: json.synopsis,\r\n                }\r\n            })\r\n\r\n            console.log(json)\r\n        })\r\n\r\n        const reviewsURL = encodeURI(mangaURL + \"/reviews\");\r\n        console.log(reviewsURL)\r\n        fetch(reviewsURL)\r\n        .then(result => result.json())\r\n        .then(json => {\r\n            this.setState({\r\n                reviews: json.reviews\r\n            })\r\n\r\n            console.log(this.state.reviews)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.isLoaded) {\r\n            return <div className = \"top-anime-card\">\r\n                <h1 className = \"loading\">Loading...</h1>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className = \"top-anime-card\">\r\n                <div className = \"header\">\r\n                    <h1 className = \"title\">\r\n                        {this.props.manga.title}\r\n                    </h1>\r\n                    <Link>\r\n                        <AiOutlineCloseCircle className = \"exit\" onClick = {this.exitClicked}/>\r\n                    </Link>\r\n                </div>\r\n                <div className = \"justify-content-sm-center row\">\r\n                    <img src = {this.props.manga.image_url} className = \"cover col-11 col-sm-9 col-md-4 col-xl-3\"/>\r\n                    <h2 className = \"stats col-12 col-sm-9 col-md-8 col-xl-9\">\r\n                        Ranked: #{this.props.manga.rank}\r\n                        <hr />\r\n                        Score: {this.props.manga.score}\r\n                        <hr />\r\n                        Volumes: {this.props.manga.volumes != null? this.props.manga.volumes : \"Unknown\"}\r\n                        <hr />\r\n                        Status: {this.state.currManga.status}\r\n                    </h2>\r\n                </div>\r\n                <p className = \"anime-description\">\r\n                    {this.state.currManga.synopsis}\r\n                </p>\r\n                <h1 className = \"title\">Reviews <br/></h1>\r\n                <div className = \"reviews-list\">\r\n                    {this.state.reviews.map(currReview => \r\n                        <Review review = {currReview}\r\n                                type = \"manga\"/>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TopMangaCard;","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopAnime\\TopAnime.js",["61","62","63","64"],"import React, { Component } from 'react';\r\nimport TopAnimeCard from './TopAnimeCard';\r\nimport '../TopAnime.css'\r\n\r\nclass TopAnime extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            topAnime: [],\r\n            topAnimeUpcoming: [],\r\n            topAnimeAiring: [],\r\n            topAnimeMovies: [],\r\n            isLoaded: false,\r\n            anime: {\r\n                end_date: \"\",\r\n                episodes: 0,\r\n                image_url: \"\",\r\n                mal_id: 0,\r\n                rank: 0,\r\n                score: 0.0,\r\n                start_date: \"\",\r\n                title: \"\"\r\n            },\r\n            cardClicked: false\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.toggle = this.toggle.bind(this)\r\n    }\r\n\r\n    handleClick(anime) {\r\n        this.setState({\r\n            anime: anime,\r\n            cardClicked: true\r\n        })\r\n\r\n        console.log(anime)\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            cardClicked: false\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://infinite-coast-32217.herokuapp.com/https://api.jikan.moe/v3/top/anime/')\r\n            .then(result => result.json())\r\n            .then((json) => {\r\n                this.setState({\r\n                    topAnime: json.top,\r\n                })\r\n\r\n                console.log(`Top Anime: ${this.state.topAnime}`)\r\n            })\r\n\r\n        fetch('https://infinite-coast-32217.herokuapp.com/https://api.jikan.moe/v3/top/anime/1/upcoming/')\r\n        .then(result => result.json())\r\n        .then((json) => {\r\n            this.setState({\r\n                topAnimeUpcoming: json.top,\r\n            })\r\n\r\n            console.log(`Upcoming Anime: ${this.state.topAnimeUpcoming}`)\r\n        })\r\n\r\n        fetch('https://infinite-coast-32217.herokuapp.com/https://api.jikan.moe/v3/top/anime/1/airing')\r\n        .then(result => result.json())\r\n        .then((json) => {\r\n            this.setState({\r\n                topAnimeAiring: json.top,\r\n            })\r\n\r\n            console.log(`Airing Anime: ${this.state.topAnime}`)\r\n        })\r\n\r\n        fetch('https://infinite-coast-32217.herokuapp.com/https://api.jikan.moe/v3/top/anime/1/movie')\r\n        .then(result => result.json())\r\n        .then((json) => {\r\n            this.setState({\r\n                topAnimeMovies: json.top,\r\n                isLoaded: true\r\n            })\r\n\r\n            console.log(`Anime Movies: ${this.state.topAnimeMovies}`)\r\n        })\r\n    }\r\n\r\n    render() { \r\n        const isLoaded = this.state.isLoaded;\r\n        const topAnime = this.state.topAnime;\r\n        const topAnimeUpcoming = this.state.topAnimeUpcoming;\r\n        const topAnimeAiring = this.state.topAnimeAiring;\r\n        const topAnimeMovies = this.state.topAnimeMovies;\r\n\r\n        if (!isLoaded) {\r\n            return <h1 className = \"loading\">Loading...</h1>\r\n        }\r\n\r\n        return ( \r\n            <div>\r\n                <h1 className = \"heading\">Top Ranking Anime</h1>    \r\n                {this.state.cardClicked ? <TopAnimeCard \r\n                                            anime = {this.state.anime}\r\n                                            toggle = {this.toggle}\r\n                                            type = \"anime\"/> : null}\r\n                <ul className = \"top-anime-list\">\r\n                    {topAnime.map((anime) => \r\n                        <li key = {anime.mal_id} className = \"anime\">\r\n                            <a href = \"#\" onClick = {() => this.handleClick(anime)}>\r\n                                <img className = \"top-anime\" src = {anime.image_url} alt = {anime.title} />\r\n                            </a>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n\r\n                <h1 className = \"heading\">Upcoming Anime</h1>\r\n                <ul className = \"top-anime-list\">\r\n                    {topAnimeUpcoming.map((anime) => \r\n                        <li key = {anime.mal_id} className = \"anime\">\r\n                            <a href = \"#\" onClick = {() => this.handleClick(anime)}>\r\n                                <img className = \"top-anime\" src = {anime.image_url} alt = {anime.title} />\r\n                            </a>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n\r\n                <h1 className = \"heading\">Airing Anime</h1>\r\n                <ul className = \"top-anime-list\">\r\n                    {topAnimeAiring.map((anime) => \r\n                        <li key = {anime.mal_id} className = \"anime\">\r\n                            <a href = \"#\" onClick = {() => this.handleClick(anime)}>\r\n                                <img className = \"top-anime\" src = {anime.image_url} alt = {anime.title} />\r\n                            </a>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n\r\n                <h1 className = \"heading\">Top Anime Movies</h1>\r\n                <ul className = \"top-anime-list\">\r\n                    {topAnimeMovies.map((anime) => \r\n                        <li key = {anime.mal_id} className = \"anime\">\r\n                            <a href = \"#\" onClick = {() => this.handleClick(anime)}>\r\n                                <img className = \"top-anime\" src = {anime.image_url} alt = {anime.title} />\r\n                            </a>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TopAnime;","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\TopAnime\\TopAnimeCard.js",["65","66"],"import React, { Component } from 'react';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nimport Review from '../Review/Review';\r\nimport '../Card.css'\r\n\r\nclass TopAnimeCard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLoaded: false,\r\n            currAnime: {\r\n                status: \"\",\r\n                synopsis: \"\",\r\n                premiered: \"\"\r\n            },\r\n            reviews: []\r\n        }\r\n\r\n        this.exitClicked = this.exitClicked.bind(this)\r\n    }\r\n    \r\n    exitClicked() {\r\n        this.props.toggle();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const animeURL = encodeURI(`https://api.jikan.moe/v3/anime/${this.props.anime.mal_id}`)\r\n        console.log(animeURL)\r\n        fetch(animeURL)\r\n        .then(result => result.json())\r\n        .then(json => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                currAnime: {\r\n                    status: json.status,\r\n                    synopsis: json.synopsis,\r\n                    premiered: json.premiered\r\n                }\r\n            })\r\n\r\n            console.log(json)\r\n        })\r\n\r\n        const reviewsURL = animeURL + \"/reviews\"\r\n        console.log(reviewsURL)\r\n        fetch(reviewsURL)\r\n        .then(result => result.json())\r\n        .then(json => {\r\n            this.setState({\r\n                reviews: json.reviews\r\n            })\r\n\r\n            console.log(this.state.reviews)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.isLoaded) {\r\n            return <div className = \"top-anime-card\">\r\n                <h1 className = \"loading\">Loading...</h1>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div className = \"top-anime-card\">\r\n                <div className = \"header\">\r\n                    <h1 className = \"title\">\r\n                        {this.props.anime.title}\r\n                    </h1>\r\n                    <Link>\r\n                        <AiOutlineCloseCircle className = \"exit\" onClick = {this.exitClicked}/>\r\n                    </Link>\r\n                </div>\r\n                <div className = \"cover-and-stats\">\r\n                    <img src = {this.props.anime.image_url} className = \"cover\"/>\r\n                    <h2 className = \"stats\">\r\n                        Ranked: #{this.props.anime.rank}\r\n                        <hr />\r\n                        Score: {this.props.anime.score}\r\n                        <hr />\r\n                        Episodes: {this.props.anime.episodes != {}? this.props.anime.episodes : \"Unknown\"}\r\n                        <hr />\r\n                        Status: {this.state.currAnime.status}\r\n                        <hr />\r\n                        Premiered: {this.state.currAnime.premiered == null? \"Unknown\" : this.state.currAnime.premiered}\r\n                    </h2>\r\n                </div>\r\n                <p className = \"anime-description\">\r\n                    {this.state.currAnime.synopsis}\r\n                </p>\r\n                <h2 className = \"title\">Reviews</h2>\r\n                <div className = \"reviews-list\">\r\n                    {this.state.reviews.map(currReview =>\r\n                        <Review review = {currReview}\r\n                                type = \"anime\"/>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TopAnimeCard;","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\Home\\Home.js",[],"C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\NavBar\\NavBar.js",[],"C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\Review\\Review.js",["67","68","69","70"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Review.css'\r\n\r\nclass MangaReview extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            clicked: false\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({\r\n            clicked: !this.state.clicked\r\n        })\r\n    }\r\n\r\n    render() { \r\n        const reviewer = this.props.review.reviewer\r\n\r\n        return (  \r\n            <div className = {this.state.clicked? \"row review-expand no-padding\":\"row review-compact no-padding\"}\r\n            onClick = {this.handleClick}>\r\n                <img className = \"col-2 pfp no-padding\" src = {reviewer.image_url}/>\r\n                <div className = \"col-10\">\r\n                    <a className = \"col-12 reviewer-username no-padding\" href = {reviewer.url} target = \"_blank\">{reviewer.username}</a>\r\n                    <h2 className = \"col-2 review-score no-padding\">Overall <br/> {reviewer.scores.overall}</h2>\r\n                    <h2 className = \"col-2 review-score no-padding\">Story <br/> {reviewer.scores.story}</h2>\r\n                    <h2 className = \"col-1 review-score no-padding\">Art <br/>{this.props.type == \"anime\" ? reviewer.scores.animation : reviewer.scores.art}</h2>\r\n                    <h2 className = \"col-3 review-score no-padding\">Character <br/> {reviewer.scores.character}</h2>\r\n                    <h2 className = \"col-3 review-score no-padding\">Enjoyment <br/> {reviewer.scores.enjoyment}</h2>\r\n                </div>\r\n                <p className = \"col-11 review-content no-padding\">{this.props.review.content}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MangaReview;","C:\\Users\\Thao\\Desktop\\mangame\\src\\components\\Footer\\Footer.js",["71","72","73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":115,"column":33,"nodeType":"85","endLine":115,"endColumn":89},{"ruleId":"83","severity":1,"message":"84","line":126,"column":33,"nodeType":"85","endLine":126,"endColumn":89},{"ruleId":"83","severity":1,"message":"84","line":137,"column":33,"nodeType":"85","endLine":137,"endColumn":90},{"ruleId":"83","severity":1,"message":"84","line":148,"column":33,"nodeType":"85","endLine":148,"endColumn":91},{"ruleId":"86","severity":1,"message":"87","line":75,"column":21,"nodeType":"85","endLine":75,"endColumn":116},{"ruleId":"83","severity":1,"message":"84","line":111,"column":29,"nodeType":"85","endLine":111,"endColumn":85},{"ruleId":"83","severity":1,"message":"84","line":122,"column":29,"nodeType":"85","endLine":122,"endColumn":85},{"ruleId":"83","severity":1,"message":"84","line":133,"column":29,"nodeType":"85","endLine":133,"endColumn":85},{"ruleId":"83","severity":1,"message":"84","line":144,"column":29,"nodeType":"85","endLine":144,"endColumn":85},{"ruleId":"86","severity":1,"message":"87","line":77,"column":21,"nodeType":"85","endLine":77,"endColumn":82},{"ruleId":"88","severity":1,"message":"89","line":83,"column":62,"nodeType":"90","messageId":"91","endLine":83,"endColumn":64},{"ruleId":"79","severity":1,"message":"92","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":28,"column":17,"nodeType":"85","endLine":28,"endColumn":85},{"ruleId":"93","severity":1,"message":"94","line":30,"column":96,"nodeType":"95","endLine":30,"endColumn":113},{"ruleId":"88","severity":1,"message":"96","line":33,"column":95,"nodeType":"90","messageId":"91","endLine":33,"endColumn":97},{"ruleId":"86","severity":1,"message":"87","line":13,"column":29,"nodeType":"85","endLine":13,"endColumn":83},{"ruleId":"86","severity":1,"message":"87","line":19,"column":29,"nodeType":"85","endLine":19,"endColumn":96},{"ruleId":"86","severity":1,"message":"87","line":25,"column":29,"nodeType":"85","endLine":25,"endColumn":83},{"ruleId":"86","severity":1,"message":"87","line":31,"column":29,"nodeType":"85","endLine":31,"endColumn":81},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]